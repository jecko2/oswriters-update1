    <!-- {% if messages %}
    <div>
      <strong>Messages:</strong>
      <ul>
        {% for message in messages %}
        <li>{{message}}</li>
        {% endfor %}
      </ul>
    </div>
    {% endif %} -->

    <!-- <div>
      <strong>Menu:</strong>
      <ul>
        {% if user.is_authenticated %}
        <li><a href="{% url 'account_email' %}">Change E-mail</a></li>
        <li><a href="{% url 'account_logout' %}">Sign Out</a></li>
        {% else %}
        <li><a href="{% url 'account_login' %}">Sign In</a></li>
        <li><a href="{% url 'account_signup' %}">Sign Up</a></li>
        {% endif %}
      </ul>
    </div> -->
   
   {% comment %} 
   contact styles
   {% endcomment %}
   /*--------------------------------------------------------------
            # Contact Us
            --------------------------------------------------------------*/
            section{
                margin: 0 0 1.1rem 0;
            }
            h1, h2, h3, h4, h5, h6 {
                font-family: "Raleway", sans-serif;
            }
            .contact .info-box {
                color: #444444;
                box-shadow: 0 0 30px rgba(214, 215, 216, 0.6);
                padding: 20px;
            }
            .contact .info-box i {
                font-size: 32px;
                color: #4eb478;
                border-radius: 50%;
                padding: 8px;
                border: 2px dotted #cbe9d8;
                float: left;
            }
            .contact .info-box h3 {
                font-size: 20px;
                color: #777777;
                font-weight: 700;
                margin: 10px 0 10px 68px;
            }
            .contact .info-box p {
                padding: 0;
                line-height: 24px;
                font-size: 14px;
                margin: 0 0 0 68px;
            }
            .contact .django-form-contact {
                box-shadow: 0 0 30px rgba(214, 215, 216, 0.6);
                padding: 30px;
            }
            .contact .django-form-contact .error-message {
                display: none;
                color: #fff;
                background: #ed3c0d;
                text-align: left;
                padding: 15px;
                font-weight: 600;
            }
            .contact .django-form-contact .error-message br + br {
                margin-top: 25px;
            }
            .contact .django-form-contact .sent-message {
                display: none;
                color: #fff;
                background: #18d26e;
                text-align: center;
                padding: 15px;
                font-weight: 600;
            }
            .contact .django-form-contact .loading {
                display: none;
                background: #fff;
                text-align: center;
                padding: 15px;
            }
            .contact .django-form-contact .loading:before {
                content: "";
                display: inline-block;
                border-radius: 50%;
                width: 24px;
                height: 24px;
                margin: 0 10px -6px 0;
                border: 3px solid #18d26e;
                border-top-color: #eee;
                -webkit-animation: animate-loading 1s linear infinite;
                animation: animate-loading 1s linear infinite;
            }
            .contact .django-form-contact input, .contact .django-form-contact textarea {
                border-radius: 0;
                box-shadow: none;
                font-size: 14px;
            }
            .contact .django-form-contact input:focus, .contact .django-form-contact textarea:focus {
                border-color: #4eb478;
            }
            .contact .django-form-contact input {
                padding: 10px 15px;
            }
            .contact .django-form-contact textarea {
                padding: 12px 15px;
            }
            .contact .django-form-contact button[type=submit] {
                background: #4eb478;
                border: 0;
                padding: 10px 24px;
                color: #fff;
                transition: 0.4s;
                border-radius: 5px;
            }
            .contact .django-form-contact button[type=submit]:hover {
                background: #45a36c;
            }
            @-webkit-keyframes animate-loading {
                0% {
                transform: rotate(0deg);
                }
                100% {
                transform: rotate(360deg);
                }
            }
            @keyframes animate-loading {
                0% {
                transform: rotate(0deg);
                }
                100% {
                transform: rotate(360deg);
                }
            }

{% comment %} signup function {% endcomment %}
# def userSignup(request):
#     if request.method == "POST":
#         form = CustomUserCreationForm(request.POST)
#         if form.is_valid():
#             user = form.save()
#             login(request, user)
#             messages.success(request, "Registration successful")
#             return redirect('home')
#         messages.error(request, 'Unsuccessful signup. Cross-check the information')
#     form = CustomUserCreationForm()
#     return render(request, 'account/signup.html', {"form": form})


# @login_required
# def task_details(request):
#     if request.method == 'POST':
#         form = AssignmentForm(request.POST, request.FILES)
#         if form.is_valid():
#             user = Task.client
#             form.save()
#             user.save_form_data()
#             return redirect('home')
#     else:
#         form = AssignmentForm()
#     return render(request, 'front/task.html', {
#         'form': form
#     })


{% comment %} tast model {% endcomment %}
class Task(models.Model):
    SUBJECT_CHOICE = (
        ('MR', 'Movie Review'),
        ('EW', 'Essay Writing'),
        ('TW', 'Thesis Writing'),
        ('DW', 'Dissertation Writing'),
        ('AW', 'Assignment Writing'),
        ('PS', 'Personal Statement'),
        ('CSW', 'Case Study Writing'),
        ('CPW', 'Capstone Project Writing'),
        ('SW', 'Speech Writing'),
        ('LRW', 'Lab Report Writing'),
    )
    ACADEMIC_LEVEL = (
        ('HS', 'High School'),
        ("CL", 'College'),
        ("UG", 'Undergraduate'),
        ('PM', 'PostGraduate-Masters'),
        ('PPH', 'PostGraduate-Phd'),
    )
    client = models.ForeignKey(
        settings.AUTH_USER_MODEL,
        null=False,
        blank=False,
        on_delete=models.CASCADE
    )
    subject = models.CharField(max_length=100, choices=SUBJECT_CHOICE)
    academic_level = models.CharField(max_length=300, choices=ACADEMIC_LEVEL)
    pages = models.PositiveIntegerField()
    word_count = models.PositiveIntegerField()
    additional_files = models.FileField(upload_to='media', blank=True, null=True,)
    images = models.FileField(upload_to='media', blank=True, null=True)
    price = models.DecimalField(max_digits=1000000, decimal_places=2)
    start_date = models.DateTimeField(auto_now_add=True)
    end_date = models.DateTimeField(auto_now_add=False, blank=True, null=True)
    
    def __str__(self):
        return str(self.client)



        {% comment %} task model on admin {% endcomment %}

class TaskUserAssociate(admin.ModelAdmin):
    list_display = ['subject', 'academic_level', 'pages',
                    'word_count', 'price',
                    ]
    list_filter = ('subject', 'start_date', 'client',)
    fieldsets = (
        ('TASK_DETAILS', {"fields": (
            'subject',  'academic_level', 'pages',
            'word_count', 'price',
        )}),
        ('EXTRA_DETAILS', {'fields': (
            'additional_files',
            'images'
        )})
    )
    search_fields = ('subjects', 'academic_level', 'word_count')
    ordering = ['-start_date']
    

admin.site.register(Task, TaskUserAssociate)



        input_formats=['%d/%m/%Y %H:%M'],
        widget=forms.DateTimeInput(attrs={
            'class': 'form-control datetimepicker-input',
            'data-target': '#datetimepicker1'
        })
